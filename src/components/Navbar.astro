---
import { name } from "spectre:globals";
import { ButtonWrapper } from "./ButtonWrapper";
import Icon from "./Icon.astro";
import Link from "./Link.astro";
import Logo from "./Logo.astro";
import { SearchWrapper } from "./SearchWrapper";

const path = Astro.url.pathname;
---
<nav class="flex justify-between items-center font-mono z-50 py-4 px-6 bg-card/80 backdrop-blur-sm border-b border-border/50 max-sm:px-4 max-sm:pt-4 max-sm:pb-2 max-sm:transition-all max-sm:duration-300">
  <Logo />

  <div class="flex items-center gap-6 max-sm:hidden">
    <ul class="flex items-center gap-1 m-0 p-0 list-none">
      <li>
        <Link href="/blog" class="nav-link" class:list={{ active: path.startsWith('/blog') }} variant="link">Blog</Link>
      </li>
      <li class="text-muted-foreground mx-2">/</li>
      <li>
        <Link href="/projects" class="nav-link" class:list={{ active: path.startsWith('/projects') }} variant="link">Projects</Link>
      </li>
    </ul>

    <div class="relative">
      <button
        id="search-trigger"
        class="flex items-center gap-2 w-48 h-8 pl-3 pr-2 bg-muted/50 border border-border/50 rounded-md text-sm text-muted-foreground hover:bg-background hover:border-accent transition-all duration-200 cursor-pointer"
      >
        <Icon type="lucide" name="search" width={14} height={14} />
        <span class="flex-1 text-left">Search</span>
        <kbd class="pointer-events-none hidden h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium opacity-100 sm:flex">
          <span class="text-xs" id="search-kbd">⌘</span>K
        </kbd>
      </button>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div class="hidden max-sm:flex items-center gap-4">
    <div class="relative">
      <button
        id="search-trigger-mobile"
        class="flex items-center gap-1 w-28 h-7 pl-2 pr-1 bg-muted/50 border border-border/50 rounded-md text-xs text-muted-foreground hover:bg-background transition-all duration-200 cursor-pointer"
      >
        <Icon type="lucide" name="search" width={12} height={12} />
        <span class="flex-1 text-left">Search</span>
      </button>
    </div>
    <ButtonWrapper className="h-8 w-8 mobile-nav-toggle rounded-md" client:load>
      <Icon type="lucide" name="menu" width={18} height={18} class="menu-closed" />
      <Icon type="lucide" name="x" width={18} height={18} class="menu-open hidden" />
    </ButtonWrapper>
  </div>

  <!-- Mobile Menu Overlay -->
  <ul class="hidden max-sm:flex max-sm:flex-col max-sm:gap-0 max-sm:absolute max-sm:w-full max-sm:top-full max-sm:left-0 max-sm:bg-card/95 max-sm:backdrop-blur-md max-sm:border-b max-sm:border-border/50 max-sm:z-[1] max-sm:opacity-0 max-sm:pointer-events-none max-sm:transition-all max-sm:duration-300 max-sm:transform max-sm:translate-y-[-10px]">
    <li class="border-b border-border/30">
      <Link href="/blog" class="mobile-nav-link" class:list={{ active: path.startsWith('/blog') }} variant="link">Blog</Link>
    </li>
    <li class="border-b border-border/30">
      <Link href="/projects" class="mobile-nav-link" class:list={{ active: path.startsWith('/projects') }} variant="link">Projects</Link>
    </li>
  </ul>
</nav>

<!-- Global Search Command -->
<SearchWrapper client:load />
<script is:inline>
  const searchTrigger = document.querySelector('#search-trigger');
  const searchTriggerMobile = document.querySelector('#search-trigger-mobile');
  const navToggle = document.querySelector('.mobile-nav-toggle');
  const searchKbd = document.querySelector('#search-kbd');

  // Set correct keyboard shortcut symbol based on platform
  if (searchKbd && navigator.platform.toLowerCase().includes('mac')) {
    searchKbd.textContent = '⌘';
  } else if (searchKbd) {
    searchKbd.textContent = 'Ctrl';
  }

  // Global state for search command dialog

  // Function to open search command
  function openSearchCommand() {
    // Dispatch custom event to open search command
    window.dispatchEvent(new CustomEvent('open-search-command'));
  }

  // Keyboard shortcut for search
  document.addEventListener('keydown', (e) => {
    if ((e.key === 'k' && (e.ctrlKey || e.metaKey)) || (e.key === 'K' && (e.ctrlKey || e.metaKey))) {
      e.preventDefault();
      openSearchCommand();
    }
  });

  // Click handlers for search triggers
  searchTrigger?.addEventListener('click', openSearchCommand);
  searchTriggerMobile?.addEventListener('click', openSearchCommand);

  // Mobile navigation toggle
  navToggle?.addEventListener('click', () => {
    navToggle.classList.toggle('active');
    document.querySelector('nav').classList.toggle('active');
  });
</script>
<style>
  @reference "../styles/global.css";

  /* Navigation link styles */
  .nav-link {
    @apply px-3 py-2 rounded-md text-sm font-medium text-foreground/80 hover:text-foreground hover:bg-accent/80 focus-visible:bg-accent focus-visible:text-accent-foreground focus-visible:outline-none transition-all duration-200;
  }

  .nav-link.active {
    @apply bg-accent text-accent-foreground;
  }

  /* Mobile navigation link styles */
  .mobile-nav-link {
    @apply block px-6 py-4 text-foreground/80 hover:text-foreground hover:bg-accent/20 focus-visible:bg-accent focus-visible:text-accent-foreground focus-visible:outline-none transition-all duration-200;
  }

  .mobile-nav-link.active {
    @apply bg-accent/20 text-accent-foreground border-l-4 border-accent;
  }


  /* Mobile menu toggle states */
  .mobile-nav-toggle.active .menu-open {
    @apply flex;
  }

  .mobile-nav-toggle.active .menu-closed {
    @apply hidden;
  }

  /* Mobile navigation active states */
  nav.active ul {
    @apply opacity-100 pointer-events-auto translate-y-0;
  }
</style>

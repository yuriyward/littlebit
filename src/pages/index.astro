---
import '../styles/index.css';

import ProfilePicture from '../assets/pfp.png';

import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import ImageGlow from '../components/ImageGlow.astro';
import Icon from '../components/Icon.astro';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import { render } from 'astro:content';
import { name, openGraph } from 'spectre:globals';

const [posts, projects, about, workExperience, quickInfo, socials] = await Promise.all([
	getCollection('posts', (post) => post.data.draft !== true),
	getCollection('projects'),
	getEntry('other', 'about'),
	getCollection('workExperience'),
	getCollection('quickInfo'),
	getCollection('socials')
]);

// biome-ignore lint/style/noNonNullAssertion: Should always be defined.
const { Content: About } = await render(about!);
---

<Layout
	title={openGraph.home.title || name}
	description={openGraph.home.description}
	pagefindIgnore
>
	<div class="layout-grid-left" slot="left">
		<Card class="flex-col-card">
			<ImageGlow quality={100} width={80} height={80} src={ProfilePicture} alt="Louis looking out of a window" loading='eager' />
			<h2>{name}</h2>
			<ul class="list-none p-0 m-0">
				{quickInfo.map((info) => (
					<li class="flex flex-row items-center gap-3 mb-3 last:mb-0">
						<Icon type={info.data.icon.type} name={info.data.icon.name as any} width={24} height={24} class='text-muted-foreground' />
						<span>{info.data.text}</span>
					</li>
				))}
			</ul>
		</Card>
		<Card>
			<h3 class="mt-0">Socials</h3>
			<ul class="list-none p-0 m-0">
				{socials.map((item) => (
					<li class="flex flex-row items-center gap-3 mb-3 last:mb-0">
						<a href={item.data.link} class="socials-link group">
							<Icon type={item.data.icon.type} name={item.data.icon.name as any} width={24} height={24} class='text-muted-foreground group-hover:text-foreground transition-colors' />
							<span>{item.data.text}</span>
						</a>
					</li>
				))}
			</ul>
		</Card>
	</div>
	<div class="layout-grid-right" slot="right">
		<Card>
			<div class="flex flex-row items-center gap-4 mb-4">
				<Icon type='lucide' name="user" width={24} height={24} class='text-muted-foreground' />
				<h2 class="m-0">About me</h2>
			</div>
			<div class="prose">
				<About />
			</div>
		</Card>
		<Card>
			<div class="flex flex-row items-center gap-4 mb-4">
				<Icon type='lucide' name="rss" width={24} height={24} class='text-muted-foreground' />
				<h2 class="m-0">Latest Posts</h2>
			</div>
			<div class="flex flex-col gap-4">
				{posts.sort((a, b) => b.data.createdAt.getTime() - a.data.createdAt.getTime()).slice(0, 2).map((post) => (
					<a href={`/blog/${post.id}`} class="group flex flex-col gap-4 p-6 rounded-xl border border-border/50 bg-card text-foreground no-underline transition-all duration-300 hover:shadow-lg hover:shadow-primary/5 hover:-translate-y-1 hover:border-primary/20 hover:bg-card/80 backdrop-blur-sm">
						<div class="flex flex-col sm:flex-row justify-between gap-2 sm:gap-0 group-hover:gap-3 transition-all duration-300">
							<h3>{post.data.title}</h3>
							<span class="text-sm text-muted-foreground/80 font-mono group-hover:text-muted-foreground transition-colors duration-300">{post.data.createdAt.toLocaleDateString()}</span>
						</div>
						<span>{post.data.description}</span>
					</a>
				))}
			</div>
		</Card>
		<Card>
			<div class="flex flex-row items-center gap-4 mb-4">
				<Icon type='lucide' name="folder-git" width={24} height={24} class='text-muted-foreground' />
				<h2 class="m-0">Latest Projects</h2>
			</div>
			<div class="flex flex-col gap-4">
				{projects.sort((a, b) => b.data.date.getTime() - a.data.date.getTime()).slice(0, 2).map((project) => (
					<a href={`/projects/${project.id}`} class="group flex flex-col gap-4 p-6 rounded-xl border border-border/50 bg-card text-foreground no-underline transition-all duration-300 hover:shadow-lg hover:shadow-primary/5 hover:-translate-y-1 hover:border-primary/20 hover:bg-card/80 backdrop-blur-sm">
						<div class="flex flex-col sm:flex-row justify-between gap-2 sm:gap-0 group-hover:gap-3 transition-all duration-300">
							<h3>{project.data.title}</h3>
							<span class="text-sm text-muted-foreground/80 font-mono group-hover:text-muted-foreground transition-colors duration-300">{project.data.date.toLocaleDateString()}</span>
						</div>
						<span>{project.data.description}</span>
					</a>
				))}
			</div>
		</Card>
		<Card>
			<div class="flex flex-row items-center gap-4 mb-4">
				<Icon type='lucide' name="briefcase-business" width={24} height={24} class='text-muted-foreground' />
				<h2 class="m-0">Work Experience</h2>
			</div>
			<div class="work-experience-container">
				{workExperience.reverse().map((entry) => (
					<div class="work-experience-entry">
						<span class="work-experience-duration">{entry.data.duration}</span>
						<h3 class="work-experience-company">{entry.data.company}</h3>
						<span class="work-experience-role">{entry.data.title}</span>
						<p class="work-experience-desc">{entry.data.description}</p>
					</div>
				))}
			</div>
		</Card>
	</div>
</Layout>
